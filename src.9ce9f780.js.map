{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","pad","value","String","padStart","CountdownTimer","constructor","selector","targetDate","timer","setInterval","time","Date","now","Math","floor","getTime","textContent","deadline"],"mappings":";;;AA0CA,aA1CA,QAAA,oBAEA,MAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,4BAGjC,SAASI,EAAIC,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGrC,MAAMC,EACFC,aAAY,SAAEC,EAAF,WAAYC,IACfA,KAAAA,WAAaA,EACbD,KAAAA,SAAWA,EAGpBE,QACIC,YAAY,KACFC,MAAAA,EAAOC,KAAKC,MACZlB,EAAOM,EAAIa,KAAKC,OAAO,KAAKP,WAAWQ,UAAUL,GAAS,QAC1Db,EAAQG,EAAIa,KAAKC,OAAQ,KAAKP,WAAWQ,UAAUL,GAAS,MAAyB,OACrFZ,EAAOE,EAAIa,KAAKC,OAAQ,KAAKP,WAAWQ,UAAUL,GAAS,KAAoB,MAC/EX,EAAOC,EAAIa,KAAKC,OAAQ,KAAKP,WAAWQ,UAAUL,GAAS,IAAc,MAE/EjB,EAAKC,KAAKsB,eAAiBtB,IAC3BD,EAAKI,MAAMmB,eAAiBnB,IAC5BJ,EAAKK,KAAKkB,eAAiBlB,IAC3BL,EAAKM,KAAKiB,eAAiBjB,KAE5B,MAKX,MAAMkB,EAAW,IAAIb,EAAe,CAClCE,SAAU,WACVC,WAAY,IAAII,KAAK,kBAGvBM,EAAST","file":"src.9ce9f780.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n    days: document.querySelector('span[data-value=\"days\"]'),\n    hours: document.querySelector('span[data-value=\"hours\"]'),\n    mins: document.querySelector('span[data-value=\"mins\"]'),\n    secs: document.querySelector('span[data-value=\"secs\"]'),\n};\n\nfunction pad(value) {\n    return String(value).padStart(2, '0');\n}\n\nclass CountdownTimer{\n    constructor({ selector, targetDate }) {\n        this.targetDate = targetDate;\n        this.selector = selector;\n    };\n\n    timer() {\n        setInterval(() => {\n            const time = Date.now();\n            const days = pad(Math.floor((this.targetDate.getTime()-time) / (1000 * 60 * 60 * 24)));\n            const hours = pad(Math.floor(((this.targetDate.getTime()-time) % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n            const mins = pad(Math.floor(((this.targetDate.getTime()-time) % (1000 * 60 * 60)) / (1000 * 60)));\n            const secs = pad(Math.floor(((this.targetDate.getTime()-time) % (1000 * 60)) / 1000));\n\n            refs.days.textContent = `${days}`;\n            refs.hours.textContent = `${hours}`;\n            refs.mins.textContent = `${mins}`;\n            refs.secs.textContent = `${secs}`;\n\n        }, 1000);\n    }\n\n};\n\nconst deadline = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2021'),\n});\n\ndeadline.timer()"]}